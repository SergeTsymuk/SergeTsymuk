
@using MVC_DataBase.DATA
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc
@using X.PagedList.Web.Common
@model IPagedList<MVC_DataBase.DATA.Employee>

@{
    ViewBag.Title = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>List of Employee</h2>
    
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    @using (Html.BeginForm("Index", "Employee", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" /></p>
}
<table class="table">
        <tr>
            <th>@Html.ActionLink("FirstName", "Index", 
                new {sortOrder = ViewBag.FirstNameSortParam, currentFilter=ViewBag.CurrentFilter})
            </th>
            <th>@Html.ActionLink("LastName", "Index", 
                new {sortOrder = ViewBag.LastNameSortParam, currentFilter=ViewBag.CurrentFilter})
            </th>
            <th>@Html.ActionLink("Department", "Index", 
                new {sortOrder = ViewBag.DepartmentSortParam, currentFilter=ViewBag.CurrentFilter})
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model) 
           {
            <tr>
            <td>@Html.DisplayFor(itemModel => item.FirstName)
            </td>
            <td>@Html.DisplayFor(itemModel => item.LastName)
            </td>
            <td>@Html.DisplayFor(itemModel => item.Department)
            </td>
            <td>@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
            </tr>
           }
       </table>
    <div class="pull-right">
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
                   new
                        {
                            page,
                   search = Context.Request.Query["search"]
                 }),
                 new PagedListRenderOptions
                 {
                     LiElementClasses = new string[] { "page-item" },
                     PageClasses = new string[] { "page-link" },
                     Display = PagedListDisplayMode.IfNeeded

                      })
            </div>
